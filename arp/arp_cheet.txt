ARP欺骗实现：
对目标主机与外部通信的监听
主机A：  ip：192.168.169.130 mac：00:0c:29:12:dd:aa gateway:192.168.169.2
主机B：  ip：192.168.169.133 mac：00:33:33:12:dd:bb gateway:192.168.169.2
gateway: ip: 192.168.169.2      mac: 00:33:33:12:dd:cc

假设主机A对主机B进行攻击：
主机B未被攻击的情况下：
主机B的arp表中，ip地址和mac地址一一对应：
internet 地址           mac地址
192.168.169.130        00:0c:29:12:dd:aa
192.168.169.2          00:33:33:12:dd:cc

当主机B想要访问www.baidu.com的时候，由于就要把数据包交给gateway
主机B发出的数据包的目的硬件地址为gateway的mac:00:33:33:12:dd:cc

中间人攻击：
假设这个时候，主机B把数据包先发给主机A，然后由A再交给gateway
对B而言，是无感知的，同样能够实现上网，但数据就被A拿到了。

为了实现中间人攻击：
相当于实现让B把数据包交给A，由于A和B在同一个局域网，通过ARP互联。
而主机B通过ARP表来传送数据，为了让B把数据包交给A，就要修改B的ARP表。

ARP表的生成原理：
主机B的ARP表起初为空的，B通过发送ARP包询问其他主机的，其他主机回复给B，B再写入ARP表。
被询问的主机回复什么mac，主机B就写入什么mac，没有进行真伪验证。如果之前已经有了相同IP
的表项，就会对其修改更新。
ARP的网关条目也是一样。是网关回复给B的，然后B写入ARP表。
这个时候如果A构造了一个源IP为gateway:192.168.169.2  源mac为主机A的数据包，发给主机B，主机B
就会更新ARP表：
主机B的新的arp表，ip地址和mac地址对应关系：
internet 地址           mac地址
192.168.169.130        00:0c:29:12:dd:aa
192.168.169.2          00:0c:29:12:dd:aa（gateway的mac已经变成和主机A一样）

没有进行真伪验证，是漏洞之源
这个时候，主机B要访问www.baidu.com，会构建新的数据包交给“网关”（网关和主机B在同一个局域网！！！），
通过查询ARP表，发现发给网关的包要添加的mac地址为：00:0c:29:12:dd:aa（实际为A的mac）
数据发出，接收到的就变成了主机A！！！！

还没完：
虽然主机A现在能收到主机B访问www.baidu.com的数据包了，但是，主机A没有把数据包转发出去，主机B就会发现
访问不了www.baidu.com，这个时候，主机A要把自身的转发功能开启了，把收到的这个数据包转发出去（发给网关），
就能够访问百度了，而且主机B没有察觉！！！

命令介绍：
在主机A上执行，完成ARP欺骗：
root@kali(主机A):arpspoof -i eth0 -t 192.168.169.133(主机B)  192.168.169.2(gateway) 

执行完：主机B上面的ARP表会更新成：
internet 地址           mac地址
192.168.169.130        00:0c:29:12:dd:aa
192.168.169.2          00:0c:29:12:dd:aa（gateway的mac已经变成和主机A一样）

主机A开启转发功能：
root@kali(主机A):echo 1 >> /proc/sys/net/ipv4/ip_forward
(ip_forward文件里面原来是一个数0，现在写成1)

至此，ARP欺骗流程完整。

https://scapy.net/
Scapy提供了基于第三层即网络层的send函数，和基于第二层即数据链路层的sendp函数
使用 send 函数不需要我们考虑路由和第二层的细节，而使用sendp函数需要我们指定发送数据包的网卡和链路层的协议。
在Scapy中使用sr函数、sr1函数来发送和接收第三层的数据包（IP， ARP等），而srp函数用于发送和接受第二层的数据包（Ethernet，802.3等）

sr函数是Scapy的核心，这个函数返回两个列表，第一个列表是收到应答的包和其对应的应答，第二个列表是未收到应答的包，
通常，我们需要调用别的函数来使得这两个返回值更易于阅读。
如果远程主机对于应答的速率有限制，我们可以通过设置inter参数来设置发送相邻两个包直接的时间间隔，此外，我们可以通过设置 timeout 参数来设置等待应答的超时时间，还可以设置retry参数来设置重试次数。在Scapy中，如果retry = 3，那么Scapy会尝试发送未应答的包3次，如果retry = -3 ，Scapy会一直发送未应答的包直到没有更多的答案是相同的包3 次（表示没有理解这句话）